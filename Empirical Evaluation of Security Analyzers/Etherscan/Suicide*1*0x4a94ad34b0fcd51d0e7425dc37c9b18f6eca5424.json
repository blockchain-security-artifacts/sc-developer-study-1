{
    "status": "1",
    "message": "OK",
    "result": [
        {
            "SourceCode": "pragma solidity ^0.5.12;\r\n\r\ncontract TheOddWins {\r\n    address payable owner;\r\n    uint evenOrOdd = 0;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    // send 0.3 to bet. you win if you are odd\r\n    function () external payable {\r\n        if (tx.origin == msg.sender) {\r\n            require(msg.value == 3*10**17);\r\n            if (evenOrOdd % 2 != 0) {\r\n                uint balance = address(this).balance;\r\n                uint devFee = balance / 100;\r\n                // send developer's fee\r\n                if (owner.send(devFee)) {\r\n                    // send winner amount\r\n                    if (!msg.sender.send(balance - devFee)) {\r\n                        revert();\r\n                    }\r\n                }\r\n            }\r\n            evenOrOdd++;\r\n        }\r\n    }\r\n    \r\n    function shutdown() public {\r\n        selfdestruct(owner);\r\n    }\r\n}",
            "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
            "ContractName": "TheOddWins",
            "CompilerVersion": "v0.5.12+commit.7709ece9",
            "CompilerType": "solc",
            "OptimizationUsed": "0",
            "Runs": "200",
            "ConstructorArguments": "",
            "EVMVersion": "Default",
            "Library": "",
            "ContractFileName": "",
            "LicenseType": "None",
            "Proxy": "0",
            "Implementation": "",
            "SwarmSource": "bzzr://896dbdc27375c14d2e053def6133e04980de1928905d16055606d00d0a12e9a5",
            "SimilarMatch": ""
        }
    ]
}