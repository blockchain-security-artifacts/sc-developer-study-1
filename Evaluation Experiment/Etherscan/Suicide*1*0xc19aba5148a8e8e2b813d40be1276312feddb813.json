{
    "status": "1",
    "message": "OK",
    "result": [
        {
            "SourceCode": "pragma solidity ^0.4.4;\r\n  //ENG::This code is a part of game on www.fgames.io\r\n  //ENG::If you found any bug or have an idea, contact us on code@fgames.io\r\n  //RUS::\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u0438\u0433\u0440\u044b \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 www.fgames.io\r\n  //RUS::\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0448\u043b\u0438 \u0431\u0430\u0433\u0438 \u0438\u043b\u043c \u0435\u0441\u0442\u044c \u0438\u0434\u0435\u0438, \u043f\u0438\u0448\u0438\u0442\u0435 \u043d\u0430\u043c code@fgames.io\r\ncontract playFive {\r\n  //ENG::Declare variable we use\r\n  //RUS::\u0414\u0435\u043a\u043b\u0430\u0440\u0438\u0440\u0443\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\r\n  address private creator;\r\n  string private message;\r\n  string private message_details;\r\n  string private referal;\r\n  uint private totalBalance; \r\n  uint public totalwin;\r\n  \r\n  //ENG::\u0421onstructor\r\n  //\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\r\n  constructor() public {\r\n\r\n    creator = tx.origin;   \r\n    message = 'initiated';\r\n  }\r\n  \r\n  //ENG::Event which will be visible in transaction logs in etherscan, and will have result data, whats will be parsed and showed on website\r\n  //RUS::\u042d\u0432\u0435\u043d\u0442 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u0434\u0435\u043d \u0430 \u043b\u043e\u0433\u0430\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u0445 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\r\n  event statusGame(string message);\r\n\r\n\r\n  //ENG::Function that show Creator adress\r\n  //RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0430\u0434\u0440\u0435\u0441\u0441 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\r\n  function getCreator() public constant returns(address) {\r\n    return creator;\r\n  }\r\n\r\n  //ENG::Function that show SmarrtContract Balance\r\n  //\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0411\u0430\u043b\u0430\u043d\u0441 \u0421\u043c\u0430\u0440\u0442\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\r\n  function getTotalBalance() public constant returns(uint) {\r\n    return address(this).balance;\r\n  }  \r\n  \r\n\r\n//ENG::One of the best way to compare two strings converted to bytes\r\n//ENG::Function will check length and if bytes length is same then calculate hash of strings and compare it, (a1)\r\n//ENG::if strings the same, return true, otherwise return false (a2)\r\n//RUS::\u041e\u0434\u0438\u043d \u0438\u0437 \u043b\u0443\u0447\u0448\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0438\u043d\u0433 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0430 \u0431\u0430\u0439\u0442\u044b\r\n//RUS::\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u0442 \u0434\u043b\u0438\u043d\u043d\u0443 \u0431\u0430\u0439\u0442\u043a\u043e\u0434\u0430 \u0438 \u043f\u043e\u0441\u043b\u043a \u0438\u0445 \u0445\u044d\u0448 (a1)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0445\u044d\u0448 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439, \u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0438\u043d\u0430\u0447\u0435 - false (a2)\r\n\r\nfunction hashCompareWithLengthCheck(string a, string b) internal pure returns (bool) {\r\n    if(bytes(a).length != bytes(b).length) { //(a1)\r\n        return false;\r\n    } else {\r\n        return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b)); //(a2)\r\n    }\r\n}\r\n\r\n//ENG::Function that calculate Wining points\r\n//ENG::After we get our *play ticket* adress, we take last 5 chars of it and game is on\r\n//ENG::sendTXTpsTX - main game function, send to this function *play ticket* code and player entered symbols \r\n//ENG::function starting setted initiated results to nothing (b1)\r\n//ENG::Then converting strings to bytes, so we can run throung each symbol (b2)\r\n//ENG::Also we set initial winpoint to 0 (b3)\r\n//ENG::Then we run throught each symbol in *play ticket* and compare it with player entered symbols\r\n//ENG::player entered symbols maximum length also is five\r\n//ENG::if function found a match using *hashCompareWithLengthCheck* function, then\r\n//ENG::function add to event message details, that shows whats symbols are found whith player entered symbols (b4)\r\n//ENG::replace used symbols in *player ticket* and entered symbols on X and Y so they no more used in game process (b5)\r\n//ENG::and increase winpoit by 1 (b6)\r\n//ENG::after function complete, it return winpoint from 0 - 5 (b7)\r\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432\r\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0435\u0433\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0438 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0438\u0433\u0440\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c\r\n//RUS::sendTXTpsTX - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0433\u0440\u044b, \u0448\u043b\u0451\u0442 \u044d\u0442\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u0438\u043b\u0435\u0442\u0430 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c\r\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043d\u0430\u0447\u0430\u043b\u043e \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 (b1)\r\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 *\u0431\u0438\u043b\u0435\u0442* \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438\u0433\u0440\u043e\u043a\u0430 \u0432 \u0431\u0430\u0439\u0442\u044b, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c (b2)\r\n//RUS::\u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0430\u0432\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u043d\u0430 0 (b3)\r\n//RUS::\u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b *\u0431\u0438\u043b\u0435\u0442\u0430* \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u0435\u043b \u0438\u0433\u0440\u043e\u043a\r\n//RUS::\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u0438\u0442 \u0438\u0433\u0440\u043e\u043a, \u0442\u043e\u0436\u0435 5.\r\n//RUS::\u0415\u0441\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 *hashCompareWithLengthCheck*, \u0442\u043e\r\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u044d\u0432\u044d\u043d\u0442\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b (b4)\r\n//RUS::\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 *\u0431\u0438\u043b\u0435\u0442\u0435* \u0438 *\u043a\u043b\u044e\u0447\u0435* \u043d\u0430 X \u0438 Y \u0438 \u043e\u043d\u0438 \u0431\u043e\u043b\u0435\u0435 \u043d\u0435 \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u0438\u0433\u0440\u0435 (b5)\r\n//RUS::\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432 winpoint \u043d\u0430 1 (b6)\r\n//RUS::\u041f\u043e \u0437\u0432\u044b\u0435\u0440\u0448\u0435\u043d\u0438\u044e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint \u043e\u0442 0 \u0434\u043e 5 (b7)\r\nfunction check_result(string ticket, string check) public  returns (uint) {\r\n  message_details = \"\"; //(b1)\r\n    bytes memory ticketBytes = bytes(ticket); //(b2)\r\n    bytes memory checkBytes = bytes(check);   //(b2) \r\n    uint winpoint = 0; //(b3)\r\n\r\n\r\n    for (uint i=0; i < 5; i++){\r\n\r\n      for (uint j=0; j < 5; j++){\r\n\r\n        if(hashCompareWithLengthCheck(string(abi.encodePacked(ticketBytes[j])),string(abi.encodePacked(checkBytes[i]))))\r\n        {\r\n          message_details = string(abi.encodePacked(message_details,'*',ticketBytes[j],'**',checkBytes[i])); //(b4)\r\n          ticketBytes[j] =\"X\"; //(b5)\r\n          checkBytes[i] = \"Y\"; //(b5)\r\n\r\n          winpoint = winpoint+1; //(b6)         \r\n        }\r\n       \r\n      }\r\n\r\n    }    \r\n    return uint(winpoint); //(b7)\r\n  }\r\n\r\n//ENG::Function destroy this smartContract\r\n//ENG::Thats needed in case if we create new game, to take founds from it and add to new game \r\n//ENG::Or also it need if we see that current game not so actual, and we need to transfer founds to a new game, that more popular\r\n//ENG::Or in case if we found any critical bug, to take founds in safe place, while fixing bugs.\r\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\r\n//RUS::\u042d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0438\u0433\u0440\u044b \u0441 \u043d\u043e\u0432\u043e\u0439 \u0438\u0433\u0440\u043e\u0439\r\n//RUS::\u0418\u043b\u0438 \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u0438\u0433\u0440, \u044d\u0442\u0430 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u0442 \u0441\u0432\u043e\u044e \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c\r\n//RUS::\u041b\u0438\u0431\u043e \u043f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0431\u0430\u0433\u043e\u0435, \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0442\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\r\n  function resetGame () public {\r\n    if (msg.sender == creator) { \r\n      selfdestruct(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3); \r\n      return;\r\n    }\r\n  }\r\n\r\n//ENG::Function to substring provided string from provided start position until end position\r\n//ENG::It's need to tak last 5 characters from *ticket* adress\r\n//RUS::\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438\r\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 5 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u0430\u0434\u0440\u0435\u0441\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430*\r\nfunction substring(string str, uint startIndex, uint endIndex) public pure returns (string) {\r\n    bytes memory strBytes = bytes(str);\r\n    bytes memory result = new bytes(endIndex-startIndex);\r\n    for(uint i = startIndex; i < endIndex; i++) {\r\n        result[i-startIndex] = strBytes[i];\r\n    }\r\n    return string(result);\r\n  }\r\n\r\n//ENG::Also very useful function, to make all symbols in string to lowercase\r\n//ENG::That need in case to lowercase *TICKET* adress and Player provided symbols\r\n//ENG::Because adress can be 0xasdf...FFDDEE123 and player can provide ACfE4. but we all convert to one format. lowercase\r\n//RUS::\u0422\u043e\u0436\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\r\n//RUS::\u042d\u0442\u043e \u043d\u0430\u0434\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u043a *\u0411\u0438\u043b\u0435\u0442* \u0438 *\u041a\u043b\u044e\u0447*\r\n//RUS::\u0422\u0430\u043a \u043a\u0430\u043a \u0430\u0434\u0440\u0435\u0441\u0441 \u0431\u0438\u043b\u0435\u0442\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c 0xasdf...FFDDEE123, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 ACfE4.\r\n\tfunction _toLower(string str) internal pure returns (string) {\r\n\t\tbytes memory bStr = bytes(str);\r\n\t\tbytes memory bLower = new bytes(bStr.length);\r\n\t\tfor (uint i = 0; i < bStr.length; i++) {\r\n\t\t\t// Uppercase character...\r\n\t\t\tif ((bStr[i] >= 65) && (bStr[i] <= 90)) {\r\n\t\t\t\t// So we add 32 to make it lowercase\r\n\t\t\t\tbLower[i] = bytes1(int(bStr[i]) + 32);\r\n\t\t\t} else {\r\n\t\t\t\tbLower[i] = bStr[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn string(bLower);\r\n\t}\r\n\r\n\r\n//ENG::Main function whats called from a website.\r\n//ENG::To provide best service. performance and support we take DevFee 13.3% of transaction (c1)\r\n//ENG::Using clone function we create new smartcontract,\r\n//ENG::to generate TOTALLY random symbols which nobody can know until transaction not mined (c2)\r\n//ENG::Used check_result function we get winpoint value (c3)\r\n//ENG::If winpoint value is 0 or 1 point - player wins 0 ETH (c4)\r\n//ENG::if winpoint value is 2 then player wins 165% from (BET - 13.3%) (c5)\r\n//ENG::if winpoint value is 3 then player wins 315% from (BET - 13.3%) (c6)\r\n//ENG::if winpoint value is 4 then player wins 515% from (BET - 13.3%) (c7)\r\n//ENG::if winpoint value is 5 then player wins 3333% from (BET - 13.3%) (c8)\r\n//ENG::If win amount is greater the smartcontract have, then player got 90% of smart contract balance (c9)\r\n//ENG::On Website before place bet, player will see smartcontract current balance (maximum to wim)\r\n//ENG::when win amount was calculated it automatically sends to player adress (c10)\r\n//ENG::After all steps completed, SmartContract will generate message for EVENT,\r\n//ENG::EVENT Message will have description of current game, and will have those fields which will be displayed on website:\r\n//ENG::Ticket full adress / Player BET / Player Win amount / Player score / Little ticket / Player provided symbols / Explain of founded symbols / Partner id\r\n//RUS::\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441 \u0441\u0430\u0439\u0442\u0430.\r\n//RUS::\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0438\u0433\u0440\u044b, \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e 13,3% \u043e\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0441\u0442\u0430\u0432\u043a\u0438 (c1)\r\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e *clone* \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430,\r\n//RUS::\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0438\u0442\u0441\u044f 100% \u0423\u041d\u0418\u041a\u0410\u041b\u042c\u041d\u041e\u0413\u041e *\u0431\u0438\u043b\u0435\u0442\u0430* (c2)\r\n//RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c check_result \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint (c3)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 0 \u0438\u043b\u0438 1 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 0 ETH (c4)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 2 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 165% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c5)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 3 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 315% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c6)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 4 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 515% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c7)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 winpoint 5 - \u0432\u044b\u0439\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u0430 3333% \u043e\u0442 (\u0421\u0422\u0410\u0412\u041a\u0410 - 13.3%) (c8)\r\n//RUS::\u0415\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430, \u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 90% \u043e\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 (c9)\r\n//RUS::\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0438\u0433\u0440\u043e\u043a \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0432\u0438\u0434\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 (\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0439\u0433\u0440\u044b\u0448)\r\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0441\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430, \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 (c10)\r\n//RUS::\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0448\u0430\u0433\u043e\u0432, \u0441\u043c\u0430\u0440\u0442 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u042d\u0412\u0415\u041d\u0422\u0410\r\n//RUS::\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0441\u044b\u0433\u0440\u0430\u043d\u043e\u0439 \u0438\u0433\u0440\u044b, \u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u044b \u043d\u0430 \u0441\u0430\u0439\u0442\u0435\r\n//RUS::\u0427\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u042d\u0412\u0415\u041d\u0422\u0410:\r\n//RUS::\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441\u0441 *\u0431\u0438\u043b\u0435\u0442\u0430* / \u0421\u0442\u0430\u0432\u043a\u0443 / \u0421\u0443\u043c\u043c\u044b \u0432\u044b\u0439\u0433\u0440\u044b\u0448\u0430 / \u041e\u0447\u043a\u0438 \u0438\u0433\u0440\u043e\u043a\u0430 / \u0423\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 \u0431\u0438\u043b\u0435\u0442 / \u0421\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u043e\u043c / \u0420\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0430 \u043d\u0430\u0439\u0434\u0435\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 / \u0418\u0434 \u043f\u0430\u0440\u0442\u043d\u0451\u0440\u0430\r\n\r\n    function sendTXTpsTX(string UserTicketKey, string setRef) public payable {\r\n    \r\n    address(0xdC3df52BB1D116471F18B4931895d91eEefdC2B3).transfer((msg.value/1000)*133); //(c1)\r\n\r\n    address check_ticket = clone(address(this)); //(c2)\r\n   \r\n    uint winpoint = check_result(substring(addressToString(check_ticket),37,42),_toLower(UserTicketKey));  //(c3)\r\n    \r\n    if(winpoint == 0)\r\n    {\r\n      totalwin = 0; //(c4)\r\n    }\r\n    if(winpoint == 1)\r\n    {\r\n      totalwin = 0; //(c4)\r\n    }\r\n    if(winpoint == 2)\r\n    {\r\n      totalwin = ((msg.value - (msg.value/1000)*133)/100)*165; //(c5)\r\n    }\r\n    if(winpoint == 3)\r\n    {\r\n      totalwin = ((msg.value - (msg.value/1000)*133)/100)*315; //(c6)\r\n    }            \r\n    if(winpoint == 4)\r\n    {\r\n      totalwin = ((msg.value - (msg.value/1000)*133)/100)*515; //(c7)\r\n    }\r\n    if(winpoint == 5)\r\n    {\r\n      totalwin = ((msg.value - (msg.value/1000)*133)/100)*3333; //(c8)\r\n    } \r\n\r\n    if(totalwin > 0)    \r\n    {\r\n      if(totalwin > address(this).balance)\r\n      {\r\n        totalwin = ((address(this).balance/100)*90); //(c9)\r\n      }\r\n      msg.sender.transfer(totalwin); //(c10)         \r\n    }\r\n    //(c11)>>\r\n    emit statusGame(string(abi.encodePacked(\"xxFULL_TICKET_HASHxx\",addressToString(check_ticket),\"xxYOUR_BETxx\",uint2str(msg.value),\"xxYOUR_WINxx\",uint2str(totalwin),\"xxYOUR_SCORExx\",uint2str(winpoint),\"xxYOUR_TICKETxx\",substring(addressToString(check_ticket),37,42),\"xxYOUR_KEYxx\", _toLower(UserTicketKey),\"xxEXPLAINxx\",message_details, \"xxREFxx\",setRef,\"xxWINxx\",totalwin)));\r\n    //(c11)<<\r\n    return;\r\n  }  \r\n\r\n\r\n  //ENG::Standart Function to receive founds\r\n  //RUS::\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\r\n  function () payable public {\r\n    //RECEIVED    \r\n  }\r\n\r\n  //ENG::Converts adress type into string\r\n  //ENG::Used to convert *TICKET* adress into string\r\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0442\u0438\u043f\u0430 adress \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\r\n  //RUS::\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 *\u0431\u0438\u043b\u0435\u0442\u0430* \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string\r\nfunction addressToString(address _addr) public pure returns(string) {\r\n    bytes32 value = bytes32(uint256(_addr));\r\n    bytes memory alphabet = \"0123456789abcdef\";\r\n\r\n    bytes memory str = new bytes(42);\r\n    str[0] = '0';\r\n    str[1] = 'x';\r\n    for (uint i = 0; i < 20; i++) {\r\n        str[2+i*2] = alphabet[uint(value[i + 12] >> 4)];\r\n        str[3+i*2] = alphabet[uint(value[i + 12] & 0x0f)];\r\n    }\r\n    return string(str);\r\n}\r\n\r\n  //ENG::Converts uint type into STRING to show data in human readable format\r\n  //RUS::\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e uint \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 string \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u043c \u0434\u043b\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0435\r\nfunction uint2str(uint i) internal pure returns (string){\r\n    if (i == 0) return \"0\";\r\n    uint j = i;\r\n    uint length;\r\n    while (j != 0){\r\n        length++;\r\n        j /= 10;\r\n    }\r\n    bytes memory bstr = new bytes(length);\r\n    uint k = length - 1;\r\n    while (i != 0){\r\n        bstr[k--] = byte(48 + i % 10);\r\n        i /= 10;\r\n    }\r\n    return string(bstr);\r\n}\r\n\r\n\r\n//ENG::This simple function, clone existing contract into new contract, to gain TOTALLY UNICALLY random string of *TICKET*\r\n//RUS::\u042d\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c 100% \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e *\u0411\u0418\u041b\u0415\u0422\u0410*\r\nfunction clone(address a) public returns(address){\r\n\r\n    address retval;\r\n    assembly{\r\n        mstore(0x0, or (0x5880730000000000000000000000000000000000000000803b80938091923cF3 ,mul(a,0x1000000000000000000)))\r\n        retval := create(0,0, 32)\r\n    }\r\n    return retval;\r\n}\r\n\r\n}",
            "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getCreator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"str\",\"type\":\"string\"},{\"name\":\"startIndex\",\"type\":\"uint256\"},{\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"substring\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ticket\",\"type\":\"string\"},{\"name\":\"check\",\"type\":\"string\"}],\"name\":\"check_result\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"clone\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"UserTicketKey\",\"type\":\"string\"},{\"name\":\"setRef\",\"type\":\"string\"}],\"name\":\"sendTXTpsTX\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalwin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"statusGame\",\"type\":\"event\"}]",
            "ContractName": "playFive",
            "CompilerVersion": "v0.4.24+commit.e67f0147",
            "CompilerType": "solc",
            "OptimizationUsed": "0",
            "Runs": "200",
            "ConstructorArguments": "",
            "EVMVersion": "Default",
            "Library": "",
            "ContractFileName": "",
            "LicenseType": "",
            "Proxy": "0",
            "Implementation": "",
            "SwarmSource": "bzzr://5dbd164e94a6c99ab2f42d2330c27fd9a4a5b78ee90d7e91fe3604595163b690",
            "SimilarMatch": ""
        }
    ]
}